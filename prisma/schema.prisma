generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "sqlite"
  url      = "file:./dev.db"
}

model Account {
  id                String  @id @default(cuid())
  userId            String
  type              String
  provider          String
  providerAccountId String
  refresh_token     String?
  access_token      String?
  expires_at        Int?
  token_type        String?
  scope             String?
  id_token          String?
  session_state     String?

  user User @relation(fields: [userId], references: [id], onDelete: Cascade)

  @@unique([provider, providerAccountId])
}

model Session {
  id           String   @id @default(cuid())
  sessionToken String   @unique
  userId       String
  expires      DateTime
  user         User     @relation(fields: [userId], references: [id], onDelete: Cascade)
}

model User {
  id            String    @id @default(cuid())
  name          String?
  email         String?   @unique
  emailVerified DateTime?
  image         String?
  accounts      Account[]
  sessions      Session[]
  albums        Album[]
  partner       User?     @relation("Couple", fields: [partnerId], references: [id])
  partnerId     String?
  partnerOf     User?     @relation("Couple")
}

model Album {
  id          String    @id @default(cuid())
  title       String
  description String?
  date        DateTime
  photos      Photo[]
  userId      String
  user        User      @relation(fields: [userId], references: [id], onDelete: Cascade)
  createdAt   DateTime  @default(now())
  updatedAt   DateTime  @updatedAt
}

model Photo {
  id          String   @id @default(cuid())
  url         String
  caption     String?
  albumId     String
  album       Album    @relation(fields: [albumId], references: [id], onDelete: Cascade)
  createdAt   DateTime @default(now())
}